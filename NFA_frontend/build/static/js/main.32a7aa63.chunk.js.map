{"version":3,"sources":["components/ExpenseDate.js","components/ExpenseItem.js","components/ExpensesFilter.js","components/Expenses.js","components/ExpenseForm.js","components/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","ExpenseItem","useState","title","utitle","setUtitle","status","ustatus","seUstatus","type","utype","setUtype","description","udescription","setUdescription","udate","setUdate","id","setId","dropdown","setDropdown","dropdownClickHandler","console","log","onClick","style","backgroundColor","display","defaultValue","onChange","event","target","value","min","max","placeholder","name","rows","cols","updatedProject","Date","updateDataProp","float","cursor","marginLeft","deleteElement","fontSize","ExpensesFilter","deafultSelected","filterProp","Expenses","yearSelected","setYearSelected","updateDataHandler","updatedData","newUpdatedData","deleteHandler","deleteID","newDeleteData","filteredData","item","filter","ele","getMonth","expenseTag","color","map","element","length","selectedFilter","ExpenseForm","newtitle","setTitle","newtype","setType","newdate","setDate","newstatus","setStatus","setDescription","onSubmit","preventDefault","newProject","onSaveData","onCancelButton","NewExpense","isPresent","setIsPresent","expenseData","newExpenseData","Math","random","toString","onNewExpenseData","EXPENSES","App","expenses","setExpenses","getAndUpdate","a","fetch","results","json","push","_id","projects","useEffect","_addProjectToTable","newFormData","method","headers","Accept","body","JSON","stringify","then","res","newExpenseFormData","prevExpenses","newUpdatedDataHandler","patchData","response","newDeleteDataHandler","newDeletedID","responseDelete","ReactDOM","render","document","getElementById"],"mappings":"oXAgBeA,EAdK,SAACC,GACjB,IAAMC,EAAQD,EAAME,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMJ,EAAME,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOL,EAAME,KAAKI,cAExB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCN,IACtC,qBAAKM,UAAU,qBAAf,SAAqCH,IACrC,qBAAKG,UAAU,oBAAf,SAAoCF,QCuJ7BG,EA9JK,SAACR,GACnB,MAA2BS,mBAAST,EAAMU,OAA1C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA6BH,mBAAST,EAAMa,QAA5C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BN,mBAAST,EAAMgB,MAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCT,mBAAST,EAAMmB,aAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0BZ,mBAAST,EAAME,MAAzC,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAAoBd,mBAAST,EAAMwB,IAAnC,mBAAOA,EAAP,KAAWC,EAAX,KACA,EAA+BhB,oBAAS,GAAxC,mBAAOiB,EAAP,KAAgBC,EAAhB,KAeMC,EAAuB,WAC3BD,GAAaD,GACbG,QAAQC,IAAI,gCAAgC9B,EAAMmB,cA+BpD,OAFAU,QAAQC,IAAI,QAAQ9B,GAGlB,iCACI0B,GACA,sBAAKnB,UAAU,eAAf,UACE,8BACE,cAAC,EAAD,CAAaL,KAAMF,EAAME,SAE3B,sBAAKK,UAAU,4BAAf,UACE,6BAAKP,EAAMU,QACX,6BAAKV,EAAMa,SACX,qBAAKN,UAAU,sBAAf,SAAsCP,EAAMgB,OAC5C,wBACEe,QAASH,EACTI,MAAO,CAAEC,gBAAiB,WAF5B,SAIE,gDAMPP,GACC,gCACE,sBAAKnB,UAAU,eAAewB,QAASH,EAAvC,UACE,8BACE,cAAC,EAAD,CAAa1B,KAAMF,EAAME,SAE3B,sBAAKK,UAAU,4BAAf,UACE,6BAAKP,EAAMU,QACX,6BAAKV,EAAMa,SACX,qBAAKN,UAAU,sBAAf,SAAsCP,EAAMgB,OAC5C,wBACEe,QAASH,EACTI,MAAO,CAAEC,gBAAiB,WAF5B,SAIE,gDAIN,sBAAK1B,UAAU,wBAAwByB,MAAO,CAAEE,QAAS,SAAzD,UACE,2CACA,uBACElB,KAAK,OACLmB,aAAcnC,EAAMU,MACpB0B,SAxEe,SAACC,GAC1BzB,EAAUyB,EAAMC,OAAOC,UA0Ef,6CACA,uBACEvB,KAAK,OACLmB,aAAcnC,EAAMa,OACpBuB,SA3EgB,SAACC,GAC3BtB,EAAUsB,EAAMC,OAAOC,UA4Ef,uBACA,2CACA,uBACEvB,KAAK,OACLmB,aAAcnC,EAAMgB,KACpBoB,SA9Ec,SAACC,GACzBnB,EAASmB,EAAMC,OAAOC,UAgFd,kDACA,uBACEvB,KAAK,OACLwB,IAAI,aACJC,IAAI,aACJN,aAAcnC,EAAME,KACpBkC,SAnFc,SAACC,GACzBd,EAASc,EAAMC,OAAOC,aAqFhB,sBAAKhC,UAAU,wBAAwByB,MAAO,CAAEE,QAAS,SAAzD,UACE,0BACEQ,YAAY,2BACZlB,GAAG,OACHmB,KAAK,QACLC,KAAK,IACLC,KAAK,KACLV,aAAcnC,EAAMmB,YACpBiB,SA1FqB,SAACC,GAChChB,EAAgBgB,EAAMC,OAAOC,UA2FrB,wBACEhC,UAAU,uBACVwB,QAhIS,WACnBN,EAAMzB,EAAMwB,IACZ,IAAMsB,EAAiB,CACrBtB,GAAIA,EACJd,MAAOC,EACPK,KAAMC,EACNf,KAAM,IAAI6C,KAAKzB,GACfT,OAAQC,EACRK,YAAaC,GAEfpB,EAAMgD,eAAeF,IAuHXd,MAAO,CAAEiB,MAAO,QAASC,OAAQ,UAAWC,WAAY,OAH1D,oBAOA,wBACE5C,UAAU,uBACVwB,QAjGU,WACpBF,QAAQC,IAAI,WACZL,EAAMzB,EAAMwB,IACZxB,EAAMoD,cAAc5B,IA+FVQ,MAAO,CAAEiB,MAAO,QAASC,OAAQ,WAHnC,SAKE,sBAAMlB,MAAO,CAACqB,SAAS,QAAS9C,UAAU,KAA1C,gCCtHC+C,G,YA7BQ,SAACtD,GAMtB,OACE,qBAAKO,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,oDACA,yBAAQgC,MAAOvC,EAAMuD,gBAAiBnB,SARd,SAACC,GAC1BrC,EAAMwD,WAAWnB,EAAMC,OAAOC,QAO7B,UACE,wBAAQA,MAAM,KAAd,iBACN,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,2BCkCWkB,EAvDE,SAACzD,GAEhB,MAAwCS,mBAAS,MAAjD,mBAAOiD,EAAP,KAAqBC,EAArB,KAOIC,EAAoB,SAACC,GACzBhC,QAAQC,IAAI,cAAe+B,GAC3B7D,EAAM8D,eAAeD,IAGjBE,EAAgB,SAACC,GACrBnC,QAAQC,IAAI,aAAckC,GAC1BhE,EAAMiE,cAAcD,IAGhBE,EAAelE,EAAMmE,KAAKC,QAAO,SAAAC,GAAQ,OAAO,IAAItB,KAAKsB,EAAInE,MAAMoE,YAAcZ,KAEnFa,EAAa,mBAAGvC,MAAO,CAACwC,MAAM,SAAjB,gCAqBf,OAnBF3C,QAAQC,IAAI,eAAeoC,GAC3BA,EAAaO,KAAI,SAACC,GAAD,OAAa7C,QAAQC,IAAI,eAAgB4C,EAAQlD,OAE9D0C,EAAaS,OAAS,IACxBJ,EAAaL,EAAaO,KAAI,SAACC,GAAD,OAC5B,cAAC,EAAD,CAEElD,GAAIkD,EAAQlD,GACZtB,KAAM,IAAI6C,KAAK2B,EAAQxE,MACvBQ,MAAOgE,EAAQhE,MACfM,KAAM0D,EAAQ1D,KACdH,OAAQ6D,EAAQ7D,OAChBM,YAAauD,EAAQvD,YACrB6B,eAAgBY,EAChBR,cAAeW,GARVW,EAAQlD,QAcf,8BACE,sBAAKjB,UAAU,WAAf,UACE,cAAC,EAAD,CACEgD,gBAAiBG,EACjBF,WA3CiB,SAACoB,GAC1B/C,QAAQC,IAAI,kBAAmB8C,GAC/BjB,EAAgBiB,MA2CTL,Q,OC2DMM,G,MA9GK,SAAC7E,GACnB,MAA6BS,mBAAS,IAAtC,mBAAOqE,EAAP,KAAiBC,EAAjB,KACA,EAA2BtE,mBAAS,SAApC,mBAAOuE,EAAP,KAAgBC,EAAhB,KACA,EAA2BxE,mBAAS,IAApC,mBAAOyE,EAAP,KAAgBC,EAAhB,KACA,EAA+B1E,mBAAS,0BAAxC,mBAAO2E,EAAP,KAAkBC,EAAlB,KACA,EAAsC5E,mBAAS,IAA/C,mBAAOU,EAAP,KAAoBmE,EAApB,KA4CA,OACE,uBAAMC,SAlBW,SAAClD,GAClBA,EAAMmD,iBACN,IAAMC,EAAa,CACjB/E,MAAOoE,EACP9D,KAAMgE,EACN9E,KAAM,IAAI6C,KAAKmC,GACfrE,OAAQuE,EACRjE,YAAaA,GAEfU,QAAQC,IAAI,aAAc2D,GAC1BzF,EAAM0F,WAAWD,GACjBV,EAAS,IACTE,EAAQ,SACRI,EAAU,0BACVF,EAAQ,KAIR,UACE,qBAAK5E,UAAU,0BACf,sBAAKA,UAAU,uBAAf,UACE,yCACA,uBACES,KAAK,OACLuB,MAAOuC,EACP1C,SAlDmB,SAACC,GAC1B0C,EAAS1C,EAAMC,OAAOC,OACtBV,QAAQC,IAAIO,EAAMC,OAAOC,aAmDvB,sBAAKhC,UAAU,uBAAf,UACE,yCACA,yBAAQoC,KAAK,cAAcnB,GAAG,QAAQY,SAlDlB,SAACC,GACzB4C,EAAQ5C,EAAMC,OAAOC,OACrBV,QAAQC,IAAI,OAAQO,EAAMC,OAAOC,QAgD7B,UACE,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,aAAd,8BAIJ,sBAAKhC,UAAU,uBAAf,UACE,kDACA,uBACES,KAAK,OACLwB,IAAI,aACJC,IAAI,aACJF,MAAO2C,EACP9C,SAxDkB,SAACC,GACzB8C,EAAQ9C,EAAMC,OAAOC,OACrBV,QAAQC,IAAIO,EAAMC,OAAOC,aA0DvB,sBAAKhC,UAAU,uBAAf,UACE,2CACA,yBAAQoC,KAAK,cAAcnB,GAAG,QAAQY,SAnEhB,SAACC,GAC3BgD,EAAUhD,EAAMC,OAAOC,OACvBV,QAAQC,IAAI,SAAUO,EAAMC,OAAOC,QAiE/B,UACE,wBAAQA,MAAM,yBAAd,oCACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,0BAGJ,sBAAKhC,UAAU,uBAAf,UACE,0DACA,0BACEmC,YAAY,iBACZE,KAAK,IACLC,KAAK,KACLT,SArEyB,SAACC,GAChCiD,EAAejD,EAAMC,OAAOC,OAC5BV,QAAQC,IAAI,iBAAkBO,EAAMC,OAAOC,aAuEzC,sBAAKhC,UAAU,uBAAf,UACE,wBAAQS,KAAK,SAASe,QAAS/B,EAAM2F,eAArC,oBAGA,wBAAQ3E,KAAK,SAAb,yBCnEO4E,G,MApCI,SAAC5F,GAEhB,MAAiCS,oBAAS,GAA1C,mBAAOoF,EAAP,KAAiBC,EAAjB,KAmBA,OACE,sBAAKvF,UAAU,cAAf,WACIsF,GACA,wBAAQ9D,QAXe,WACxB+D,GAAa,IAUZ,uBAEDD,GACC,cAAC,EAAD,CACEH,WAxBkB,SAACK,GACvB,IAAMC,EAAc,2BACbD,GADa,IAEhBvE,GAAIyE,KAAKC,SAASC,aAGtBnG,EAAMoG,iBAAiBJ,IAmBnBL,eAZoB,WACxBG,GAAa,WClBfO,EAAW,GA+GFC,EA7GH,WACV,MAAgC7F,mBAAS4F,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAEMC,EAAY,uCAAG,4BAAAC,EAAA,sEACGC,MAAM,cADT,cACbC,EADa,gBAEOA,EAAQC,OAFf,cAIPpC,KAAI,SAACJ,GACf,OAAOgC,EAASS,KAAK,CACnBtF,GAAI6C,EAAI0C,IACRrG,MAAO2D,EAAI2C,SACXhG,KAAMqD,EAAIrD,KACVd,KAAMmE,EAAInE,KACVW,OAAQwD,EAAIxD,OACZM,YAAakD,EAAIlD,iBAIrBqF,EAAY,GAAD,OAAKH,IAfG,2CAAH,qDAkBlBY,qBAAU,WACRR,IACA5E,QAAQC,IAAI,WAAYyE,KACvB,IAEH,IAAMW,EAAqB,SAACC,GAC1BR,MAAM,aAAc,CAClBS,OAAQ,OACRC,QAAS,CACPC,OAAQ,oCACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAEpBO,MAAK,SAACC,GAAD,OAASA,EAAId,UAClBa,MAAK,SAACC,GAAD,OAAS9F,QAAQC,IAAI,MAAO6F,OAGhCC,EAAkB,uCAAG,WAAOT,GAAP,SAAAT,EAAA,sEACGQ,EAAmBC,GADtB,cAEzBX,GAAY,SAACqB,GACX,MAAM,CAAEV,GAAR,mBAAwBU,OAG1BxB,EAAS1B,OAAS,EAClB8B,IAPyB,2CAAH,sDAUlBqB,EAAqB,uCAAG,WAAOhE,GAAP,iBAAA4C,EAAA,6DAC5B7E,QAAQC,IAAI,iBAAkBgC,GACxBiE,EAAY,CAChBrH,MAAOoD,EAAepD,MACtBM,KAAM8C,EAAe9C,KACrBH,OAAQiD,EAAejD,OACvBX,KAAM4D,EAAe5D,KACrBiB,YAAa2C,EAAe3C,aAPF,SAULwF,MAAM,cAAD,OACZ7C,EAAetC,IAC7B,CACE4F,OAAQ,QACRC,QAAS,CACPC,OAAQ,oCACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUM,KAlBG,cAUtBC,EAVsB,gBAsBDA,EAASnB,OAtBR,cAwB5BR,EAAS1B,OAAS,EAClB8B,IAzB4B,4CAAH,sDA4BrBwB,EAAoB,uCAAG,WAAOC,GAAP,eAAAxB,EAAA,sEACEC,MAAM,cAAD,OAClBuB,GACd,CACEd,OAAQ,SACRC,QAAS,CACPC,OAAQ,oCACR,eAAgB,sBAPK,cACrBa,EADqB,gBAYDA,EAAetB,OAZd,cAc3BR,EAAS1B,OAAS,EAClB8B,IAf2B,2CAAH,sDAkB1B,OACE,gCACE,cAAC,EAAD,CAAYL,iBAAkBwB,IACT,IAApBvB,EAAS1B,QACR,cAAC,EAAD,CACER,KAAMoC,EACNzC,eAAgBgE,EAChB7D,cAAegE,QCvGzBG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.32a7aa63.chunk.js","sourcesContent":["import './ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n    const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n      <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{day}</div>\r\n        <div className=\"expense-date__day\">{year}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React, {useState} from 'react';\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const [utitle,setUtitle] = useState(props.title);\r\n  const [ustatus, seUstatus] = useState(props.status);\r\n  const [utype, setUtype] = useState(props.type);\r\n  const [udescription, setUdescription] = useState(props.description);\r\n  const [udate, setUdate] = useState(props.date);\r\n  const [id, setId] = useState(props.id);\r\n  const [dropdown,setDropdown] = useState(false);\r\n  \r\n  const clickHandler = () => {\r\n    setId(props.id);\r\n    const updatedProject = {\r\n      id: id,\r\n      title: utitle,\r\n      type: utype,\r\n      date: new Date(udate),\r\n      status: ustatus,\r\n      description: udescription,\r\n    };\r\n    props.updateDataProp(updatedProject);\r\n  }\r\n\r\n  const dropdownClickHandler = () => {\r\n    setDropdown(!dropdown);\r\n    console.log(\"dropdownClickHandler clicked!\",props.description);\r\n  }\r\n\r\n  const updateTitleHandler = (event) => {\r\n    setUtitle(event.target.value);\r\n  };\r\n\r\n  const updateStatusHandler = (event) => {\r\n    seUstatus(event.target.value);\r\n  };\r\n\r\n  const updateTypeHandler = (event) => {\r\n    setUtype(event.target.value);\r\n  };\r\n\r\n  const updateDateHandler = (event) => {\r\n    setUdate(event.target.value);\r\n  };\r\n\r\n  const updateDescriptionHandler = (event) => {\r\n    setUdescription(event.target.value);\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    console.log(\"delete!\");\r\n    setId(props.id);\r\n    props.deleteElement(id);\r\n  };\r\n\r\n  console.log(\"props\",props);\r\n\r\n  return (\r\n    <div>\r\n      {!dropdown && (\r\n        <div className=\"expense-item\">\r\n          <div>\r\n            <ExpenseDate date={props.date}></ExpenseDate>\r\n          </div>\r\n          <div className=\"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <h2>{props.status}</h2>\r\n            <div className=\"expense-item__price\">{props.type}</div>\r\n            <button\r\n              onClick={dropdownClickHandler}\r\n              style={{ backgroundColor: \"#252525\" }}\r\n            >\r\n              <h2>&dArr;</h2>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {dropdown && (\r\n        <div>\r\n          <div className=\"expense-item\" onClick={dropdownClickHandler}>\r\n            <div>\r\n              <ExpenseDate date={props.date}></ExpenseDate>\r\n            </div>\r\n            <div className=\"expense-item__description\">\r\n              <h2>{props.title}</h2>\r\n              <h2>{props.status}</h2>\r\n              <div className=\"expense-item__price\">{props.type}</div>\r\n              <button\r\n                onClick={dropdownClickHandler}\r\n                style={{ backgroundColor: \"#4b4b4b\" }}\r\n              >\r\n                <h2>&uArr;</h2>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"expense-item-dropdown\" style={{ display: \"block\" }}>\r\n            <label>Name: </label>\r\n            <input\r\n              type=\"text\"\r\n              defaultValue={props.title}\r\n              onChange={updateTitleHandler}\r\n            ></input>\r\n\r\n            <label>Status: </label>\r\n            <input\r\n              type=\"text\"\r\n              defaultValue={props.status}\r\n              onChange={updateStatusHandler}\r\n            ></input>\r\n            <br></br>\r\n            <label>Type: </label>\r\n            <input\r\n              type=\"text\"\r\n              defaultValue={props.type}\r\n              onChange={updateTypeHandler}\r\n            ></input>\r\n\r\n            <label>Expected Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2019-01-01\"\r\n              max=\"2022-12-31\"\r\n              defaultValue={props.date}\r\n              onChange={updateDateHandler}\r\n            ></input>\r\n          </div>\r\n          <div className=\"expense-item-dropdown\" style={{ display: \"block\" }}>\r\n            <textarea\r\n              placeholder=\"Add links and socials...\"\r\n              id=\"info\"\r\n              name=\"story\"\r\n              rows=\"5\"\r\n              cols=\"50\"\r\n              defaultValue={props.description}\r\n              onChange={updateDescriptionHandler}\r\n            ></textarea>\r\n            <button\r\n              className=\"expense-item__update\"\r\n              onClick={clickHandler}\r\n              style={{ float: \"right\", cursor: \"pointer\", marginLeft: \"4px\" }}\r\n            >\r\n              Update\r\n            </button>\r\n            <button\r\n              className=\"expense-item__update\"\r\n              onClick={deleteHandler}\r\n              style={{ float: \"right\", cursor: \"pointer\" }}\r\n            >\r\n              <span style={{fontSize:\"17px\"}} className=\"fa\">\r\n                &#xf014;\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const filterChangeHandler = (event) => {\r\n       props.filterProp(event.target.value);\r\n    }\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by month</label>\r\n        <select value={props.deafultSelected} onChange={filterChangeHandler}>\r\n          <option value=\"00\">Jan</option>\r\n    <option value=\"01\">Feb</option>\r\n    <option value=\"02\">Mar</option>\r\n    <option value=\"03\">Apr</option>\r\n    <option value=\"04\">May</option>\r\n    <option value=\"05\">Jun</option>\r\n    <option value=\"06\">Jul</option>\r\n    <option value=\"07\">Aug</option>\r\n    <option value=\"08\">Sep</option>\r\n    <option value=\"09\">Oct</option>\r\n    <option value=\"10\">Nov</option>\r\n    <option value=\"11\">Dec</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport './Expenses.css'\r\nimport ExpensesFilter from './ExpensesFilter'\r\n\r\nconst Expenses = (props) => {\r\n\r\n  const [yearSelected, setYearSelected] = useState(\"00\");\r\n\r\nconst sendSelectedFilter = (selectedFilter) => {\r\n  console.log(\"received filter\", selectedFilter);\r\n  setYearSelected(selectedFilter);\r\n}\r\n\r\nconst updateDataHandler = (updatedData) => {\r\n  console.log(\"updatedData\", updatedData);\r\n  props.newUpdatedData(updatedData);\r\n};\r\n\r\nconst deleteHandler = (deleteID) => {\r\n  console.log(\"deleteData\", deleteID);\r\n  props.newDeleteData(deleteID);\r\n};\r\n\r\nconst filteredData = props.item.filter(ele => {return new Date(ele.date).getMonth() == yearSelected;});\r\n\r\nlet expenseTag = <p style={{color:\"white\"}}>No expenses found!</p>\r\n\r\nconsole.log(\"filteredData\",filteredData);\r\nfilteredData.map((element) => console.log(\"filteredData\", element.id));\r\n\r\nif (filteredData.length > 0) {\r\n  expenseTag = filteredData.map((element) => (\r\n    <ExpenseItem\r\n      key={element.id}\r\n      id={element.id}\r\n      date={new Date(element.date)}\r\n      title={element.title}\r\n      type={element.type}\r\n      status={element.status}\r\n      description={element.description}\r\n      updateDataProp={updateDataHandler}\r\n      deleteElement={deleteHandler}\r\n    />\r\n  ));\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"expenses\">\r\n        <ExpensesFilter\r\n          deafultSelected={yearSelected}\r\n          filterProp={sendSelectedFilter}\r\n        />\r\n        {expenseTag}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [newtitle, setTitle] = useState(\"\");\r\n  const [newtype, setType] = useState(\"Nodes\");\r\n  const [newdate, setDate] = useState(\"\");\r\n  const [newstatus, setStatus] = useState(\"Check on expected date\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setTitle(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const typeChangeHandler = (event) => {\r\n    setType(event.target.value);\r\n    console.log(\"type\", event.target.value);\r\n  };\r\n\r\n  const statusChangeHandler = (event) => {\r\n    setStatus(event.target.value);\r\n    console.log(\"status\", event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setDate(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const descriptionChangeHandler = (event) => {\r\n    setDescription(event.target.value);\r\n    console.log(\"setDescription\", event.target.value);\r\n  };\r\n\r\n  const submitform = (event) => {\r\n    event.preventDefault();\r\n    const newProject = {\r\n      title: newtitle,\r\n      type: newtype,\r\n      date: new Date(newdate),\r\n      status: newstatus,\r\n      description: description,\r\n    };\r\n    console.log(\"newProject\", newProject);\r\n    props.onSaveData(newProject);\r\n    setTitle(\"\");\r\n    setType(\"Nodes\");\r\n    setStatus(\"Check on expected date\");\r\n    setDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitform}>\r\n      <div className=\"new-expense__controls\"></div>\r\n      <div className=\"new-expense__control\">\r\n        <label>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={newtitle}\r\n          onChange={titleChangeHandler}\r\n        ></input>\r\n      </div>\r\n      <div className=\"new-expense__control\">\r\n        <label>Type</label>\r\n        <select name=\"Select type\" id=\"types\" onChange={typeChangeHandler}>\r\n          <option value=\"Nodes\">Nodes</option>\r\n          <option value=\"DAO\">DAO</option>\r\n          <option value=\"Farming\">Farming</option>\r\n          <option value=\"PlayToEarn\">PlayToEarn</option>\r\n          <option value=\"Financials\">Financials</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"new-expense__control\">\r\n        <label>Expected Date</label>\r\n        <input\r\n          type=\"date\"\r\n          min=\"2019-01-01\"\r\n          max=\"2022-12-31\"\r\n          value={newdate}\r\n          onChange={dateChangeHandler}\r\n        ></input>\r\n      </div>\r\n\r\n      <div className=\"new-expense__control\">\r\n        <label>Status</label>\r\n        <select name=\"Select type\" id=\"types\" onChange={statusChangeHandler}>\r\n          <option value=\"Check on expected date\">Check on expected date</option>\r\n          <option value=\"Released\">Released</option>\r\n          <option value=\"Rugged\">Rugged</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"new-expense__control\">\r\n        <label>Add Links and socials</label>\r\n        <textarea\r\n          placeholder=\"More info.....\"\r\n          rows=\"5\"\r\n          cols=\"50\"\r\n          onChange={descriptionChangeHandler}\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancelButton}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, {useState} from 'react';\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport './NewExpense.css'\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isPresent,setIsPresent] = useState(false);\r\n\r\n    const onSaveDataHandler = (expenseData) => {\r\n        const newExpenseData = {\r\n            ...expenseData,\r\n            id: Math.random().toString(),\r\n        };\r\n\r\n        props.onNewExpenseData(newExpenseData);\r\n    }\r\n\r\n    const expenseButtonHandler = () => {\r\n         setIsPresent(true);\r\n    }\r\n\r\n    const cancelButtonHandler = () => {\r\n        setIsPresent(false);\r\n    }\r\n\r\n    return (\r\n      <div className=\"new-expense\">\r\n        {!isPresent && (\r\n          <button onClick={expenseButtonHandler}>New Psych</button>\r\n        )}\r\n        {isPresent && (\r\n          <ExpenseForm\r\n            onSaveData={onSaveDataHandler}\r\n            onCancelButton={cancelButtonHandler}\r\n          ></ExpenseForm>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","import React, { useState, useEffect } from \"react\";\nimport Expenses from \"./components/Expenses\";\nimport NewExpense from \"./components/NewExpense\";\n\nconst EXPENSES = [];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(EXPENSES);\n\n  const getAndUpdate = async () => {\n    const results = await fetch(\"/api/posts\");\n    const resultsJSON = await results.json();\n\n    resultsJSON.map((ele) => {\n      return EXPENSES.push({\n        id: ele._id,\n        title: ele.projects,\n        type: ele.type,\n        date: ele.date,\n        status: ele.status,\n        description: ele.description,\n      });\n    });\n\n    setExpenses([...EXPENSES]);\n  };\n\n  useEffect(() => {\n    getAndUpdate();\n    console.log(\"expenses\", expenses);\n  }, []);\n\n  const _addProjectToTable = (newFormData) => {\n    fetch(\"/api/posts\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newFormData),\n    })\n      .then((res) => res.json())\n      .then((res) => console.log(\"res\", res));\n  };\n\n  const newExpenseFormData = async (newFormData) => {\n    const addedResponse = await _addProjectToTable(newFormData);\n    setExpenses((prevExpenses) => {\n      return [newFormData, ...prevExpenses];\n    });\n\n    EXPENSES.length = 0;\n    getAndUpdate();\n  };\n\n  const newUpdatedDataHandler = async (newUpdatedData) => {\n    console.log(\"newUpdatedData\", newUpdatedData);\n    const patchData = {\n      title: newUpdatedData.title,\n      type: newUpdatedData.type,\n      status: newUpdatedData.status,\n      date: newUpdatedData.date,\n      description: newUpdatedData.description,\n    };\n\n    const response = await fetch(\n      `/api/posts/${newUpdatedData.id}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(patchData),\n      }\n    );\n\n    const dataModified = await response.json();\n\n    EXPENSES.length = 0;\n    getAndUpdate();\n  };\n\n  const newDeleteDataHandler = async (newDeletedID) => {\n    const responseDelete = await fetch(\n      `/api/posts/${newDeletedID}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const deletedData = await responseDelete.json();\n\n    EXPENSES.length = 0;\n    getAndUpdate();\n  };\n\n  return (\n    <div>\n      <NewExpense onNewExpenseData={newExpenseFormData}></NewExpense>\n      {EXPENSES.length !== 0 && (\n        <Expenses\n          item={expenses}\n          newUpdatedData={newUpdatedDataHandler}\n          newDeleteData={newDeleteDataHandler}\n        ></Expenses>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}